# Generated by Django 2.1.2 on 2018-10-05 20:49

import collectionsapp.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='BottleCap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('date_acquired', models.DateField(default=datetime.date.today, verbose_name='Date Acquired')),
                ('method_acquired', models.IntegerField(choices=[(0, ''), (1, 'Donated'), (2, 'Purchased'), (3, 'Traded'), (4, 'Found'), (5, 'Created')], default=0, verbose_name='Method Acquired')),
                ('available_for_trade', models.BooleanField(default=False, verbose_name='Available For Trade')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='Image')),
                ('number_in_collection', models.IntegerField(verbose_name='Number in collection')),
                ('description', models.CharField(blank=True, max_length=512, verbose_name='Description')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='Company')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='Brand')),
                ('product', models.CharField(blank=True, max_length=100, verbose_name='Product')),
                ('variety', models.CharField(blank=True, max_length=100, verbose_name='Variety')),
                ('color', models.IntegerField(blank=True, default=None, null=True, verbose_name='Color')),
                ('beverage_type', models.IntegerField(choices=[(0, ''), (1, 'Soda'), (2, 'Beer'), (3, 'Water'), (4, 'Milk'), (5, 'Kombucha')], default=0, verbose_name='Beverage Type')),
                ('text', models.CharField(blank=True, max_length=200, verbose_name='Text')),
                ('underside', models.CharField(blank=True, max_length=50, verbose_name='Underside')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionFieldset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('field1', models.CharField(blank=True, max_length=200, verbose_name='Field1')),
                ('field2', models.CharField(blank=True, max_length=200, verbose_name='Field2')),
                ('field3', models.CharField(blank=True, max_length=200, verbose_name='Field3')),
                ('field4', models.CharField(blank=True, max_length=200, verbose_name='Field4')),
                ('field5', models.CharField(blank=True, max_length=200, verbose_name='Field5')),
                ('field6', models.CharField(blank=True, max_length=200, verbose_name='Field6')),
                ('field7', models.CharField(blank=True, max_length=200, verbose_name='Field7')),
                ('field8', models.CharField(blank=True, max_length=200, verbose_name='Field8')),
                ('field9', models.CharField(blank=True, max_length=200, verbose_name='Field9')),
                ('field10', models.CharField(blank=True, max_length=200, verbose_name='Field10')),
                ('created_by', models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collectionfieldset_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('modified_by', models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collectionfieldset_modified', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collectiontype_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('modified_by', models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collectiontype_modified', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='collection_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='collectionsapp.CollectionType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='created_by',
            field=models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collection_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='collection',
            name='modified_by',
            field=models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collection_modified', to=settings.AUTH_USER_MODEL, verbose_name='Modified By'),
        ),
        migrations.AddField(
            model_name='collection',
            name='owner',
            field=models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_collection_owned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bottlecap',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='collectionsapp.Collection', verbose_name='Collection ID'),
        ),
        migrations.AddField(
            model_name='bottlecap',
            name='created_by',
            field=models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_bottlecap_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='bottlecap',
            name='modified_by',
            field=models.ForeignKey(default=collectionsapp.models.get_unknown_user, on_delete=django.db.models.deletion.PROTECT, related_name='collectionsapp_bottlecap_modified', to=settings.AUTH_USER_MODEL, verbose_name='Modified By'),
        ),
        migrations.AddField(
            model_name='bottlecap',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
